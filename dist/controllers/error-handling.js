"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ErrorHandling = exports.ErrorHandlingDB = void 0;
/*This file is used to handle the errors that are generated by
    the database or your custom errors. it is used to return
    a message and a code to the user when an error occurs
 in the database. */
const ErrorHandlingDB = (ValidatorKey) => {
    // console.log(ValidatorKey)
    switch (ValidatorKey) {
        case 'is_null':
            return {
                code: 400,
                msg: "The field is null"
            };
        case 'not_unique':
            return {
                code: 400,
                msg: "The field is unique"
            };
        default:
            return {
                code: 500,
                msg: "Has an ocurred problem"
            };
    }
};
exports.ErrorHandlingDB = ErrorHandlingDB;
//This is to custom errors
const ErrorHandling = (error) => {
    switch (error.message) {
        case 'sintax_error':
            return {
                code: 400,
                msg: "The fields are incorrect"
            };
        case 'not_find_user':
            return {
                code: 404,
                msg: "Not find user"
            };
        case 'not_match_password':
            return {
                code: 401,
                msg: "The password is incorrect"
            };
        case 'not_find':
            return {
                code: 404,
                msg: "Not find your query"
            };
        default:
            return {
                code: 500,
                msg: "Has an ocurred problem"
            };
    }
};
exports.ErrorHandling = ErrorHandling;
